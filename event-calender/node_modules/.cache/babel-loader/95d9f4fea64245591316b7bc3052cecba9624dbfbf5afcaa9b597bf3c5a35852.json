{"ast":null,"code":"var _jsxFileName = \"/home/brilworks-26/Desktop/react-pratice-main/event-calender/src/Pages/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../assets/style/demo.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Stack from \"react-bootstrap/Stack\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport RadioButtons from \"../components/RadioButtons\";\nimport * as formik from \"formik\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport VadlidationSchema from \"../validationSchemas/VadlidationSchema\";\nimport { useAuth } from \"../Context/AuthContext\";\nimport { generateMockJWT } from \"../utils/MockJWT\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    Formik\n  } = formik;\n  const Navigate = useNavigate();\n  const {\n    isLogin,\n    logIn,\n    logOut\n  } = useAuth();\n  const handleFormSubmit = (values, {\n    setSubmitting\n  }) => {\n    const {\n      email,\n      password\n    } = values;\n    const registeredUsers = JSON.parse(localStorage.getItem(\"FormData\")) || [];\n    const user = registeredUsers.filter(u => u.email == email && u.password == password);\n    if (user) {\n      const email = user[0].email;\n      const password = user[0].password;\n      const id = user[0].id;\n      const mockToken = generateMockJWT({\n        userId: id,\n        email: email,\n        password: password\n      });\n      console.log();\n      localStorage.setItem(\"token\", mockToken);\n      Navigate(\"/home\");\n    } else {\n      toast.error(\"Invalid credentials\");\n    }\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      gap: 2,\n      className: \"mx-5 my-5\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        enableReinitialize: true,\n        validationSchema: VadlidationSchema,\n        onSubmit: handleFormSubmit,\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        children: ({\n          handleSubmit,\n          handleChange,\n          values,\n          touched,\n          errors\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3 mt-10\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"bold-text\",\n                  children: \"Email address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Enter email\",\n                  name: \"email\",\n                  onChange: handleChange,\n                  value: values.email,\n                  isValid: touched.email && !errors.email,\n                  isInvalid: touched.email && !!errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3 mt-10\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"bold-text\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  name: \"password\",\n                  placeholder: \"Enter Password\",\n                  onChange: handleChange,\n                  value: values.password,\n                  isValid: touched.password && !errors.password,\n                  isInvalid: touched.password && !!errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            type: \"submit\",\n            className: \"text-center\",\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"bCqomEXQhmJ9zBVjZOJC1gJ31eI=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Form","Col","Row","Stack","Button","RadioButtons","formik","useParams","Link","useNavigate","ToastContainer","toast","VadlidationSchema","useAuth","generateMockJWT","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","Formik","Navigate","isLogin","logIn","logOut","handleFormSubmit","values","setSubmitting","email","password","registeredUsers","JSON","parse","localStorage","getItem","user","filter","u","id","mockToken","userId","console","log","setItem","error","children","fileName","_jsxFileName","lineNumber","columnNumber","gap","className","enableReinitialize","validationSchema","onSubmit","initialValues","handleSubmit","handleChange","touched","errors","noValidate","Group","Label","Control","type","placeholder","name","onChange","value","isValid","isInvalid","Feedback","variant","to","_c","$RefreshReg$"],"sources":["/home/brilworks-26/Desktop/react-pratice-main/event-calender/src/Pages/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../assets/style/demo.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Stack from \"react-bootstrap/Stack\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport RadioButtons from \"../components/RadioButtons\";\nimport * as formik from \"formik\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport VadlidationSchema from \"../validationSchemas/VadlidationSchema\";\nimport { useAuth } from \"../Context/AuthContext\";\nimport { generateMockJWT } from \"../utils/MockJWT\";\n\nconst Login = () => {\n  const { Formik } = formik;\n  const Navigate = useNavigate();\n  const { isLogin, logIn, logOut } = useAuth();\n\n  const handleFormSubmit = (values, { setSubmitting }) => {\n    const { email, password } = values;\n    const registeredUsers = JSON.parse(localStorage.getItem(\"FormData\")) || [];\n    const user = registeredUsers.filter(\n      (u) => u.email == email && u.password == password\n    );\n    if (user) {\n      const email = user[0].email;\n      const password = user[0].password;\n      const id = user[0].id;\n      const mockToken = generateMockJWT({\n        userId: id,\n        email: email,\n        password: password,\n      });\nconsole.log();\n      localStorage.setItem(\"token\", mockToken);\n      Navigate(\"/home\");\n    } else {\n      toast.error(\"Invalid credentials\");\n    }\n    setSubmitting(false);\n  };\n  return (\n    <>\n      <ToastContainer />\n      <Stack gap={2} className=\"mx-5 my-5\">\n        <Formik\n          enableReinitialize\n          validationSchema={VadlidationSchema}\n          onSubmit={handleFormSubmit}\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n        >\n          {({ handleSubmit, handleChange, values, touched, errors }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n              <Row>\n                <Col>\n                  <Form.Group className=\"mb-3 mt-10\">\n                    <Form.Label className=\"bold-text\">Email address</Form.Label>\n                    <Form.Control\n                      type=\"email\"\n                      placeholder=\"Enter email\"\n                      name=\"email\"\n                      onChange={handleChange}\n                      value={values.email}\n                      isValid={touched.email && !errors.email}\n                      isInvalid={touched.email && !!errors.email}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.email}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col>\n                  <Form.Group className=\"mb-3 mt-10\">\n                    <Form.Label className=\"bold-text\">Password</Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Enter Password\"\n                      onChange={handleChange}\n                      value={values.password}\n                      isValid={touched.password && !errors.password}\n                      isInvalid={touched.password && !!errors.password}\n                    />\n\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.password}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              <Button variant=\"dark\" type=\"submit\" className=\"text-center\">\n                submit\n              </Button>\n              <Link to=\"/register\">Register</Link>\n            </Form>\n          )}\n        </Formik>\n      </Stack>\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}